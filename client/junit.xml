<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="58" failures="0" errors="0" time="10.794">
  <testsuite name="AUTHORIZE_INTERCEPTOR" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="3.349" tests="3">
    <testcase classname="AUTHORIZE_INTERCEPTOR redirects to login and call logout" name="AUTHORIZE_INTERCEPTOR redirects to login and call logout" time="0.106">
    </testcase>
    <testcase classname="AUTHORIZE_INTERCEPTOR does not redirect to login and return error" name="AUTHORIZE_INTERCEPTOR does not redirect to login and return error" time="0.013">
    </testcase>
    <testcase classname="AUTHORIZE_INTERCEPTOR returns 200" name="AUTHORIZE_INTERCEPTOR returns 200" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="ContentLayoutComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="4.552" tests="2">
    <testcase classname="ContentLayoutComponent initializes isDarkMode with true" name="ContentLayoutComponent initializes isDarkMode with true" time="0.416">
    </testcase>
    <testcase classname="ContentLayoutComponent toggleDarkTheme calls styleManager.toggleDarkTheme and sets isDarkMode" name="ContentLayoutComponent toggleDarkTheme calls styleManager.toggleDarkTheme and sets isDarkMode" time="0.17">
    </testcase>
  </testsuite>
  <testsuite name="LoginComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="4.401" tests="1">
    <testcase classname="LoginComponent should create" name="LoginComponent should create" time="0.469">
    </testcase>
  </testsuite>
  <testsuite name="CountryListComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="4.455" tests="1">
    <testcase classname="CountryListComponent calls getCountries on ngAfterViewInit" name="CountryListComponent calls getCountries on ngAfterViewInit" time="0.275">
    </testcase>
  </testsuite>
  <testsuite name="CustomerListComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="4.472" tests="1">
    <testcase classname="CustomerListComponent calls getCustomers on ngAfterViewInit" name="CustomerListComponent calls getCustomers on ngAfterViewInit" time="0.182">
    </testcase>
  </testsuite>
  <testsuite name="CityListComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="4.601" tests="2">
    <testcase classname="CityListComponent calls getCities on ngAfterViewInit" name="CityListComponent calls getCities on ngAfterViewInit" time="0.247">
    </testcase>
    <testcase classname="CityListComponent search value change loads data" name="CityListComponent search value change loads data" time="0.056">
    </testcase>
  </testsuite>
  <testsuite name="SupplierListComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="4.87" tests="1">
    <testcase classname="SupplierListComponent should create" name="SupplierListComponent should create" time="0.489">
    </testcase>
  </testsuite>
  <testsuite name="CountryEditComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="5.014" tests="9">
    <testcase classname="CountryEditComponent initializes the form" name="CountryEditComponent initializes the form" time="0.32">
    </testcase>
    <testcase classname="CountryEditComponent ngOnInit calls masterDataService.getCountry and patches the edit form" name="CountryEditComponent ngOnInit calls masterDataService.getCountry and patches the edit form" time="0.066">
    </testcase>
    <testcase classname="CountryEditComponent getUnsavedStateCount returns count of new states in form array" name="CountryEditComponent getUnsavedStateCount returns count of new states in form array" time="0.043">
    </testcase>
    <testcase classname="CountryEditComponent getUnsavedStateCount returns null if there are no new states in the form array" name="CountryEditComponent getUnsavedStateCount returns null if there are no new states in the form array" time="0.059">
    </testcase>
    <testcase classname="CountryEditComponent adds a state to the form group array" name="CountryEditComponent adds a state to the form group array" time="0.05">
    </testcase>
    <testcase classname="CountryEditComponent removes a state at the given index from the form group array" name="CountryEditComponent removes a state at the given index from the form group array" time="0.033">
    </testcase>
    <testcase classname="CountryEditComponent save calls masterDataService.update if form is valid" name="CountryEditComponent save calls masterDataService.update if form is valid" time="0.058">
    </testcase>
    <testcase classname="CountryEditComponent save does not call masterDataService.update if form is invalid" name="CountryEditComponent save does not call masterDataService.update if form is invalid" time="0.074">
    </testcase>
    <testcase classname="CountryEditComponent cancel resets the edit form and navigates to list" name="CountryEditComponent cancel resets the edit form and navigates to list" time="0.252">
    </testcase>
  </testsuite>
  <testsuite name="OrderListComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="1.39" tests="1">
    <testcase classname="OrderListComponent should create" name="OrderListComponent should create" time="0.091">
    </testcase>
  </testsuite>
  <testsuite name="CityEditComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="6.201" tests="6">
    <testcase classname="CityEditComponent initializes the form" name="CityEditComponent initializes the form" time="0.646">
    </testcase>
    <testcase classname="CityEditComponent ngOnInit calls masterDataService.getCity if url parameter ist set and patches the edit form" name="CityEditComponent ngOnInit calls masterDataService.getCity if url parameter ist set and patches the edit form" time="0.296">
    </testcase>
    <testcase classname="CityEditComponent ngOnInit does not call masterDataService.getCity if url parameter ist 0 and does not patch the edit form" name="CityEditComponent ngOnInit does not call masterDataService.getCity if url parameter ist 0 and does not patch the edit form" time="0.215">
    </testcase>
    <testcase classname="CityEditComponent save calls masterDataService.update if form is valid" name="CityEditComponent save calls masterDataService.update if form is valid" time="0.23">
    </testcase>
    <testcase classname="CityEditComponent save does not call masterDataService.update if form is invalid" name="CityEditComponent save does not call masterDataService.update if form is invalid" time="0.211">
    </testcase>
    <testcase classname="CityEditComponent cancel resets the edit form and navigates to list" name="CityEditComponent cancel resets the edit form and navigates to list" time="0.53">
    </testcase>
  </testsuite>
  <testsuite name="AddressComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:21" time="2.504" tests="1">
    <testcase classname="AddressComponent should create" name="AddressComponent should create" time="0.43">
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="1.404" tests="4">
    <testcase classname="AuthService logout calls removeItem and resets the auth status to default" name="AuthService logout calls removeItem and resets the auth status to default" time="0.022">
    </testcase>
    <testcase classname="AuthService logout does not call removeItem" name="AuthService logout does not call removeItem" time="0.002">
    </testcase>
    <testcase classname="AuthService getToken returns token from cache" name="AuthService getToken returns token from cache" time="0.005">
    </testcase>
    <testcase classname="AuthService getToken returns empty string if cache is empty" name="AuthService getToken returns empty string if cache is empty" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CustomerService" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="1.277" tests="3">
    <testcase classname="CustomerService gets a list of customers and sets the correct query string" name="CustomerService gets a list of customers and sets the correct query string" time="0.012">
    </testcase>
    <testcase classname="CustomerService gets a customers and sets the correct paramter" name="CustomerService gets a customers and sets the correct paramter" time="0.002">
    </testcase>
    <testcase classname="CustomerService updates a customer" name="CustomerService updates a customer" time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="CustomerEditComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="6.149" tests="4">
    <testcase classname="CustomerEditComponent ngOnInit patches the form if async data is loaded" name="CustomerEditComponent ngOnInit patches the form if async data is loaded" time="0.904">
    </testcase>
    <testcase classname="CustomerEditComponent save calls customerService.update if form is valid" name="CustomerEditComponent save calls customerService.update if form is valid" time="0.414">
    </testcase>
    <testcase classname="CustomerEditComponent save does not call customerService.update if form is invalid" name="CustomerEditComponent save does not call customerService.update if form is invalid" time="0.359">
    </testcase>
    <testcase classname="CustomerEditComponent cancel resets the edit form and navigates to list" name="CustomerEditComponent cancel resets the edit form and navigates to list" time="0.517">
    </testcase>
  </testsuite>
  <testsuite name="MasterDataService" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="1.164" tests="7">
    <testcase classname="MasterDataService gets a list of cities and sets the correct query string" name="MasterDataService gets a list of cities and sets the correct query string" time="0.011">
    </testcase>
    <testcase classname="MasterDataService gets a city and sets the correct paramter" name="MasterDataService gets a city and sets the correct paramter" time="0.003">
    </testcase>
    <testcase classname="MasterDataService updates a city" name="MasterDataService updates a city" time="0.001">
    </testcase>
    <testcase classname="MasterDataService creates a city" name="MasterDataService creates a city" time="0.002">
    </testcase>
    <testcase classname="MasterDataService gets a list of countries and sets the correct query string" name="MasterDataService gets a list of countries and sets the correct query string" time="0.001">
    </testcase>
    <testcase classname="MasterDataService gets a country and sets the correct paramter" name="MasterDataService gets a country and sets the correct paramter" time="0.002">
    </testcase>
    <testcase classname="MasterDataService updates a country" name="MasterDataService updates a country" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="CachService" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="1.316" tests="5">
    <testcase classname="CachService getItem calls localStorage.getItem  for null to null" name="CachService getItem calls localStorage.getItem  for null to null" time="0.009">
    </testcase>
    <testcase classname="CachService getItem calls localStorage.getItem  for &quot;{ \&quot;value\&quot;: 1 }&quot; to {&quot;value&quot;: 1}" name="CachService getItem calls localStorage.getItem  for &quot;{ \&quot;value\&quot;: 1 }&quot; to {&quot;value&quot;: 1}" time="0.002">
    </testcase>
    <testcase classname="CachService setItem calls localStorage.setItem  for &quot;value&quot; to &quot;value&quot;" name="CachService setItem calls localStorage.setItem  for &quot;value&quot; to &quot;value&quot;" time="0.004">
    </testcase>
    <testcase classname="CachService setItem calls localStorage.setItem  for {&quot;value&quot;: 1} to &quot;{\&quot;value\&quot;:1}&quot;" name="CachService setItem calls localStorage.setItem  for {&quot;value&quot;: 1} to &quot;{\&quot;value\&quot;:1}&quot;" time="0.002">
    </testcase>
    <testcase classname="CachService removeItem calls localStorage.removeItem" name="CachService removeItem calls localStorage.removeItem" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="NavigationMenuComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="1.937" tests="1">
    <testcase classname="NavigationMenuComponent should create" name="NavigationMenuComponent should create" time="0.075">
    </testcase>
  </testsuite>
  <testsuite name="MasterDataComponent" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:22" time="2.057" tests="1">
    <testcase classname="MasterDataComponent should create" name="MasterDataComponent should create" time="0.14">
    </testcase>
  </testsuite>
  <testsuite name="StyleManager" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:17" time="6.535" tests="2">
    <testcase classname="StyleManager toggleDarkTheme removes the dark theme" name="StyleManager toggleDarkTheme removes the dark theme" time="0.02">
    </testcase>
    <testcase classname="StyleManager toggleDarkTheme adds the dark theme" name="StyleManager toggleDarkTheme adds the dark theme" time="0.01">
    </testcase>
  </testsuite>
  <testsuite name="WindowRef" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:23" time="0.69" tests="1">
    <testcase classname="WindowRef provides native window instance" name="WindowRef provides native window instance" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="SupplierService" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:23" time="0.628" tests="1">
    <testcase classname="SupplierService gets a list of suppliers and sets the correct query string" name="SupplierService gets a list of suppliers and sets the correct query string" time="0.006">
    </testcase>
  </testsuite>
  <testsuite name="DateFilter" errors="0" failures="0" skipped="0" timestamp="2024-02-03T20:14:23" time="0.675" tests="1">
    <testcase classname="DateFilter resets the filter" name="DateFilter resets the filter" time="0.003">
    </testcase>
  </testsuite>
</testsuites>